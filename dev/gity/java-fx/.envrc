xcode=$(xcode-select -p)
#use nix
PATH_add /usr/bin
#export DEVELOPER_DIR=$xcode
export SDKROOT=$xcode/SDKs/MacOSX.sdk

watch_file nix/src.json

graalvm_version=24.0.1
graalvm_hash=875555f6063b4847b617504e8f8a36290a6726770be72388261f6118bcf28f81

cyan() (
  a='\033[1;36m'
  b='\033[0m'
  printf "$a$1$b"
)

p="$(uname -o)-$(uname -m)"
case "$p" in
  "Darwin-arm64")
    platform=macos-aarch64
    ;;
  *)
    echo "Unsupported platform: '$p'."
    exit 1
esac

get-dep() (
  exit 0
  target_dir=$1
  lockfile=$target_dir/LAST
  url=$2
  expected_hash=$3
  lock_val="$url|$expected_hash"
  untar=${4:-tar xzf}
  path=${5:-Contents}

  exec {flock_fd}>.flock
  flock $flock_fd
  if (! [ -f $lockfile ]) || [ "$lock_val" != "$(cat $lockfile)" ]; then
    cyan "\nDownloading dependencies to $target_dir. This may take a while, please be patient.\n\n"
    rm -rf $target_dir
    d=$(mktemp -d)
    curl "$url" > $d/tmp.tar.gz
    actual_hash=$(sha256sum $d/tmp.tar.gz | cut -f1 -d' ')
    if ! [ "$expected_hash" = "$actual_hash" ]; then
      echo "FAIL. Invalid sha for $target_dir."
      echo "Expected: $expected_sha"
      echo "Actual:   $actual_sha"
      exit 1
    fi
    (cd $d; $untar tmp.tar.gz)
    mv $d/*/$path $target_dir
    rm -rf $d
    echo "$lock_val" > $lockfile
  fi
)

get-dep .graal \
        https://download.oracle.com/graalvm/${graalvm_version%%.*}/archive/graalvm-jdk-${graalvm_version}_${platform}_bin.tar.gz \
        $graalvm_hash
PATH_add .graal/Home/bin

get-dep .javafx \
        https://download2.gluonhq.com/openjfx/24.0.1/openjfx-24.0.1_osx-aarch64_bin-sdk.zip \
        859e89235d50247da23bd7f6ba2b5baa46b5ef627795928493e70d9d2d0afa89 \
        unzip \
        lib

export FX_HOME="$(pwd)/.javafx"

PATH_add bin
PATH_add /opt/homebrew/bin
